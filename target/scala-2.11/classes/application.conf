# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     ***REMOVED***://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See ***REMOVED***://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

play.ws.ssl.loose.acceptAnyCertificate="true"
play.ws.ssl.loose.allowWeakCiphers="true"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

app.type = "dev"

app.userid.header = "userid"

Inj-properties {
  sftpUser = ""
  sftpPass = ""
  sftpBasePath = "data/***REMOVED***_injftp"
  sftpBasePathDone = "data/***REMOVED***_injftp/.done"
  sftpBasePathNoProc = "data/***REMOVED***_injftp/.noProc"
  hdfsBasePath = "***REMOVED***"
  dataBasePath = "datalake"
}

play.filters.cors {
  allowedHttpMethods = ["GET", "POST", "HEAD", "DELETE", "PATCH", "OPTION", "PUT"]
}


#play.***REMOVED***.filters     = "it.gov.***REMOVED***.common.filters.FiltersSecurityCORS"

hadoop_conf_dir = "/etc/hadoop/conf"
keytab = "/opt/docker/conf/***REMOVED***.keytab"
principal = "***REMOVED***@PLATFORM.DAF.LOCAL"


play.modules.enabled += "it.gov.***REMOVED***.common.modules.authentication.SecurityModule"


pac4j.security {
rules = [
  {
    "/catalog-manager/v1/public/.*" = {
    authorizers = "_anonymous_"
    }
  },
  {
    "/catalog-manager/v1/.*" = {
     authorizers = "_authenticated_"
      clients = "DirectBasicAuthClient, HeaderClient"
  }
  }
  ]
}


contexts {
ingestion-lookups {
executor = "thread-pool-executor"
throughput = 1
thread-pool-executor {
  fixed-pool-size = 55
}
}
ingestion-ws {
executor = "thread-pool-executor"
throughput = 1
thread-pool-executor {
  fixed-pool-size = 14
}
}
}


ingestion {
user : "XXXXXX",
pass : "XXXXXX"
}


kylo {
url = "***REMOVED***://tba-kylo-services.default.svc.cluster.local:8420"
user = "dladmin"
}

kafkaProxy {
  url="***REMOVED***://kafka-***REMOVED***-proxy.default.svc.cluster.local:8085"
}


play.ws.timeout.connection = 240000 // The maximum time to wait when connecting to the remote host (default is 120 seconds).
play.ws.timeout.idle = 240000 //The maximum time the request can stay idle (connection is established but waiting for more data) (default is 120 seconds).
play.ws.timeout.request= 240000
play.***REMOVED***.parser.maxDiskBuffer = 20MB
play.***REMOVED***.parser.maxMemoryBuffer = 2MB
parsers.anyContent.maxLength = 20MB
